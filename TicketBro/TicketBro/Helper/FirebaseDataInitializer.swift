//
//  FirebaseDataInitializer.swift
//  TicketBro
//
//  Created by Admin Bookie on 5.05.25.
//

import Foundation
import Firebase
import FirebaseFirestore

// –ö–ª–∞—Å—Å –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Firebase
class FirebaseDataInitializer {
    private let db = Firestore.firestore()
    
    // –ì–ª–∞–≤–Ω—ã–π –º–µ—Ç–æ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π
    func initializeAppDataSimplified() {
        print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        
        // –®–∞–≥ 1: –î–æ–±–∞–≤–ª—è–µ–º –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã
        addTestCinemas { success in
            if success {
                // –®–∞–≥ 2: –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å–º—ã
                self.addTestMovies { success in
                    if success {
                        // –®–∞–≥ 3: –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∞–Ω—Å—ã
                        self.addTestShowtimes { success in
                            if success {
                                print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ Firebase")
                                
                                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
                                self.checkDataExists()
                            } else {
                                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Å–µ–∞–Ω—Å—ã")
                            }
                        }
                    } else {
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ñ–∏–ª—å–º—ã")
                    }
                }
            } else {
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã")
            }
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤
    private func addTestCinemas(completion: @escaping (Bool) -> Void) {
        print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã...")
        
        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
        db.collection("cinemas").limit(to: 1).getDocuments { snapshot, error in
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤: \(error.localizedDescription)")
                completion(false)
                return
            }
            
            // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            if let snapshot = snapshot, !snapshot.documents.isEmpty {
                print("‚ÑπÔ∏è –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                completion(true)
                return
            }
            
            // –°–æ–∑–¥–∞–µ–º 2 –ø—Ä–æ—Å—Ç—ã—Ö –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞
            let cinemas = [
                [
                    "name": "–û–∫—Ç—è–±—Ä—å",
                    "address": "—É–ª. –ù–æ–≤—ã–π –ê—Ä–±–∞—Ç, 24, –ú–æ—Å–∫–≤–∞",
                    "description": "–û–¥–∏–Ω –∏–∑ —Å—Ç–∞—Ä–µ–π—à–∏—Ö –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –ú–æ—Å–∫–≤—ã —Å –±–æ–≥–∞—Ç–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π.",
                    "photoURLs": ["building"],
                    "location": [
                        "latitude": 55.752259,
                        "longitude": 37.586407
                    ],
                    "rating": 4.7,
                    "halls": [
                        [
                            "name": "–ó–∞–ª 1",
                            "capacity": 100,
                            "hallType": "standard",
                            "features": ["3d"]
                        ],
                        [
                            "name": "–ó–∞–ª 2",
                            "capacity": 150,
                            "hallType": "vip",
                            "features": ["comfort_seats"]
                        ]
                    ],
                    "amenities": ["–ü–∞—Ä–∫–∏–Ω–≥", "–ö–∞—Ñ–µ"],
                    "contactPhone": "+7 (495) 123-45-67",
                    "contactEmail": "info@cinema.ru",
                    "workingHours": [
                        "monday": ["open": "10:00", "close": "22:00"],
                        "tuesday": ["open": "10:00", "close": "22:00"],
                        "wednesday": ["open": "10:00", "close": "22:00"],
                        "thursday": ["open": "10:00", "close": "22:00"],
                        "friday": ["open": "10:00", "close": "23:00"],
                        "saturday": ["open": "10:00", "close": "23:00"],
                        "sunday": ["open": "10:00", "close": "22:00"]
                    ]
                ],
                [
                    "name": "–§–æ—Ä–º—É–ª–∞ –ö–∏–Ω–æ",
                    "address": "—É–ª. –õ–µ–Ω–∏–Ω–∞, 15, –ú–æ—Å–∫–≤–∞",
                    "description": "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä —Å –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–º–∏ –∑–∞–ª–∞–º–∏.",
                    "photoURLs": ["film.circle"],
                    "location": [
                        "latitude": 55.751244,
                        "longitude": 37.618423
                    ],
                    "rating": 4.5,
                    "halls": [
                        [
                            "name": "–ó–∞–ª 1",
                            "capacity": 120,
                            "hallType": "standard",
                            "features": ["3d"]
                        ],
                        [
                            "name": "IMAX",
                            "capacity": 200,
                            "hallType": "imax",
                            "features": ["3d", "comfort_seats"]
                        ]
                    ],
                    "amenities": ["–ü–∞—Ä–∫–∏–Ω–≥", "–ö–∞—Ñ–µ", "VIP-–∑–∞–ª"],
                    "contactPhone": "+7 (495) 987-65-43",
                    "contactEmail": "info@formulakino.ru",
                    "workingHours": [
                        "monday": ["open": "10:00", "close": "22:00"],
                        "tuesday": ["open": "10:00", "close": "22:00"],
                        "wednesday": ["open": "10:00", "close": "22:00"],
                        "thursday": ["open": "10:00", "close": "22:00"],
                        "friday": ["open": "10:00", "close": "23:00"],
                        "saturday": ["open": "10:00", "close": "23:00"],
                        "sunday": ["open": "10:00", "close": "22:00"]
                    ]
                ]
            ]
            
            // –°—á–µ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
            var completedOperations = 0
            var successfulOperations = 0
            
            for cinema in cinemas {
                let cinemaRef = self.db.collection("cinemas").document()
                cinemaRef.setData(cinema) { error in
                    completedOperations += 1
                    
                    if let error = error {
                        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞: \(error.localizedDescription)")
                    } else {
                        print("‚úÖ –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä \(cinema["name"] ?? "–±–µ–∑ –∏–º–µ–Ω–∏") —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Å ID: \(cinemaRef.documentID)")
                        successfulOperations += 1
                    }
                    
                    // –ö–æ–≥–¥–∞ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã
                    if completedOperations == cinemas.count {
                        completion(successfulOperations > 0)
                    }
                }
            }
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∏–ª—å–º–æ–≤
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∏–ª—å–º–æ–≤
    private func addTestMovies(completion: @escaping (Bool) -> Void) {
        print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∏–ª—å–º—ã...")
        
        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
        db.collection("movies").limit(to: 1).getDocuments { snapshot, error in
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ñ–∏–ª—å–º–æ–≤: \(error.localizedDescription)")
                completion(false)
                return
            }
            
            // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å —Ñ–∏–ª—å–º—ã, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            if let snapshot = snapshot, !snapshot.documents.isEmpty {
                print("‚ÑπÔ∏è –§–∏–ª—å–º—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                completion(true)
                return
            }
            
            // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–µ–ª–∏–∑–æ–≤
            let now = Date()
            let calendar = Calendar.current
            
            // –°–æ–∑–¥–∞–µ–º 3 –ø—Ä–æ—Å—Ç—ã—Ö —Ñ–∏–ª—å–º–∞
            let movies = [
                [
                    "title": "–ú—Å—Ç–∏—Ç–µ–ª–∏: –§–∏–Ω–∞–ª",
                    "originalTitle": "Avengers: Endgame",
                    "year": 2025,
                    "duration": 180,
                    "genres": ["–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–ë–æ–µ–≤–∏–∫", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è"],
                    "description": "–ü–æ—Å–ª–µ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∫–æ–º–∞–Ω–¥–∞ –ú—Å—Ç–∏—Ç–µ–ª–µ–π —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å —É—â–µ—Ä–±...",
                    "posterURL": "film.fill", // –°–∏—Å—Ç–µ–º–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    "backdropURL": "photo",   // –°–∏—Å—Ç–µ–º–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                    "trailerURL": "https://example.com/trailer1",
                    "director": "–≠–Ω—Ç–æ–Ω–∏ –†—É—Å—Å–æ, –î–∂–æ –†—É—Å—Å–æ",
                    "cast": ["–†–æ–±–µ—Ä—Ç –î–∞—É–Ω–∏ –º–ª.", "–ö—Ä–∏—Å –≠–≤–∞–Ω—Å", "–°–∫–∞—Ä–ª–µ—Ç—Ç –ô–æ—Ö–∞–Ω—Å—Å–æ–Ω"],
                    "rating": 9.2,
                    "ageRestriction": "12+",
                    "releaseDate": now,
                    "endScreeningDate": calendar.date(byAdding: .day, value: 30, to: now),
                    "language": "–†—É—Å—Å–∫–∏–π",
                    "format": ["2d", "3d", "imax"]
                ],
                // –î—Ä—É–≥–∏–µ —Ñ–∏–ª—å–º—ã...
            ]
            
            // –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –∫–æ–¥–∞...
        }
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–µ–∞–Ω—Å–æ–≤
    private func addTestShowtimes(completion: @escaping (Bool) -> Void) {
        print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Å–µ–∞–Ω—Å—ã...")
        
        // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ–±—ã –Ω–µ –¥–æ–±–∞–≤–ª—è—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
        db.collection("showtimes").limit(to: 1).getDocuments { snapshot, error in
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ–∞–Ω—Å–æ–≤: \(error.localizedDescription)")
                completion(false)
                return
            }
            
            // –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å —Å–µ–∞–Ω—Å—ã, –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
            if let snapshot = snapshot, !snapshot.documents.isEmpty {
                print("‚ÑπÔ∏è –°–µ–∞–Ω—Å—ã —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                completion(true)
                return
            }
            
            // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∏–º –≤—Å–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã –∏ —Ñ–∏–ª—å–º—ã
            self.getAllCinemasAndMovies { cinemas, movies, success in
                if !success || cinemas.isEmpty || movies.isEmpty {
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞—Ö –∏ —Ñ–∏–ª—å–º–∞—Ö")
                    completion(false)
                    return
                }
                
                print("‚ÑπÔ∏è –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: \(cinemas.count) –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –∏ \(movies.count) —Ñ–∏–ª—å–º–æ–≤")
                
                var showtimes: [[String: Any]] = []
                let calendar = Calendar.current
                let now = Date()
                
                // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–∞ –∏ —Ñ–∏–ª—å–º–∞ —Å–æ–∑–¥–∞–µ–º —Å–µ–∞–Ω—Å—ã
                for cinema in cinemas {
                    guard let cinemaId = cinema["id"] as? String,
                          let halls = cinema["halls"] as? [[String: Any]] else {
                        continue
                    }
                    
                    for movie in movies {
                        guard let movieId = movie["id"] as? String else { continue }
                        
                        // –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∞–Ω—Å–æ–≤
                        for (index, hall) in halls.enumerated() {
                            guard let hallName = hall["name"] as? String else { continue }
                            
                            // –°–æ–∑–¥–∞–µ–º —Å–µ–∞–Ω—Å—ã –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π
                            for day in 0..<7 {
                                guard let date = calendar.date(byAdding: .day, value: day, to: now) else { continue }
                                
                                // –°–µ–∞–Ω—Å—ã –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è –¥–Ω—è
                                let times = [10, 12, 15, 18, 20, 22]
                                for hour in times {
                                    var components = calendar.dateComponents([.year, .month, .day], from: date)
                                    components.hour = hour
                                    components.minute = 0
                                    
                                    guard let startTime = calendar.date(from: components) else { continue }
                                    
                                    // –ó–¥–µ—Å—å –¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è
                                    let duration = movie["duration"] as? Int ?? 120
                                    guard let endTime = calendar.date(byAdding: .minute, value: duration, to: startTime) else { continue }
                                    
                                    // –°–æ–∑–¥–∞–µ–º —Å–µ–∞–Ω—Å
                                    let showtime: [String: Any] = [
                                        "movieId": movieId,
                                        "cinemaId": cinemaId,
                                        "hallId": "hall_\(index + 1)",  // –ü—Ä–æ—Å—Ç–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∑–∞–ª–∞
                                        "hallName": hallName,
                                        "startTime": startTime,
                                        "endTime": endTime,
                                        "format": "2d",
                                        "language": "–†—É—Å—Å–∫–∏–π",
                                        "priceCategories": [
                                            ["seatType": "standard", "price": 400],
                                            ["seatType": "vip", "price": 700]
                                        ],
                                        "availableSeats": 100,
                                        "totalSeats": 100,
                                        "isActive": true
                                    ]
                                    
                                    showtimes.append(showtime)
                                }
                            }
                        }
                    }
                }
                
                print("‚ÑπÔ∏è –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ \(showtimes.count) —Å–µ–∞–Ω—Å–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
                
                // –û–≥—Ä–∞–Ω–∏—á–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∞–Ω—Å–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                if showtimes.count > 30 {
                    showtimes = Array(showtimes.prefix(30))
                    print("‚ÑπÔ∏è –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∞–Ω—Å–æ–≤ –¥–æ 30 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                }
                
                // –°—á–µ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
                var completedOperations = 0
                var successfulOperations = 0
                
                // –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∞–Ω—Å—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                for showtime in showtimes {
                    let showtimeRef = self.db.collection("showtimes").document()
                    showtimeRef.setData(showtime) { error in
                        completedOperations += 1
                        
                        if let error = error {
                            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–µ–∞–Ω—Å–∞: \(error.localizedDescription)")
                        } else {
                            print("‚úÖ –°–µ–∞–Ω—Å –¥–ª—è —Ñ–∏–ª—å–º–∞ ID: \(showtime["movieId"] ?? "?") —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω")
                            successfulOperations += 1
                        }
                        
                        // –ö–æ–≥–¥–∞ –≤—Å–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã
                        if completedOperations == showtimes.count {
                            completion(successfulOperations > 0)
                        }
                    }
                }
                
                // –ï—Å–ª–∏ –Ω–µ—Ç —Å–µ–∞–Ω—Å–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                if showtimes.isEmpty {
                    print("‚ÑπÔ∏è –ù–µ—Ç —Å–µ–∞–Ω—Å–æ–≤ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è")
                    completion(false)
                }
            }
        }
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –∏ —Ñ–∏–ª—å–º–æ–≤
    private func getAllCinemasAndMovies(completion: @escaping ([[String: Any]], [[String: Any]], Bool) -> Void) {
        let dispatchGroup = DispatchGroup()
        
        var cinemas: [[String: Any]] = []
        var movies: [[String: Any]] = []
        var success = true
        
        // –ü–æ–ª—É—á–∞–µ–º –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã
        dispatchGroup.enter()
        db.collection("cinemas").getDocuments { snapshot, error in
            defer { dispatchGroup.leave() }
            
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤: \(error.localizedDescription)")
                success = false
                return
            }
            
            guard let documents = snapshot?.documents else {
                print("‚ùå –î–æ–∫—É–º–µ–Ω—Ç—ã –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                success = false
                return
            }
            
            for document in documents {
                var cinema = document.data()
                cinema["id"] = document.documentID
                cinemas.append(cinema)
            }
            
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ \(cinemas.count) –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤")
        }
        
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–ª—å–º—ã
        dispatchGroup.enter()
        db.collection("movies").getDocuments { snapshot, error in
            defer { dispatchGroup.leave() }
            
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–æ–≤: \(error.localizedDescription)")
                success = false
                return
            }
            
            guard let documents = snapshot?.documents else {
                print("‚ùå –î–æ–∫—É–º–µ–Ω—Ç—ã —Ñ–∏–ª—å–º–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                success = false
                return
            }
            
            for document in documents {
                var movie = document.data()
                movie["id"] = document.documentID
                movies.append(movie)
            }
            
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ \(movies.count) —Ñ–∏–ª—å–º–æ–≤")
        }
        
        dispatchGroup.notify(queue: .main) {
            completion(cinemas, movies, success)
        }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ
    func checkDataExists() {
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ...")
        
        let dispatchGroup = DispatchGroup()
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤
        dispatchGroup.enter()
        db.collection("cinemas").getDocuments { snapshot, error in
            defer { dispatchGroup.leave() }
            
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤: \(error.localizedDescription)")
                return
            }
            
            guard let documents = snapshot?.documents else {
                print("‚ùå –î–æ–∫—É–º–µ–Ω—Ç—ã –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return
            }
            
            print("‚úÖ –ù–∞–π–¥–µ–Ω–æ \(documents.count) –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä–æ–≤")
            
            for (index, doc) in documents.enumerated() {
                if index < 3 { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
                    print("  üìã –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä #\(index + 1): ID = \(doc.documentID), name = \(doc.data()["name"] ?? "–Ω–µ—Ç –∏–º–µ–Ω–∏")")
                }
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∏–ª—å–º–æ–≤
        dispatchGroup.enter()
        db.collection("movies").getDocuments { snapshot, error in
            defer { dispatchGroup.leave() }
            
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–∏–ª—å–º–æ–≤: \(error.localizedDescription)")
                return
            }
            
            guard let documents = snapshot?.documents else {
                print("‚ùå –î–æ–∫—É–º–µ–Ω—Ç—ã —Ñ–∏–ª—å–º–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return
            }
            
            print("‚úÖ –ù–∞–π–¥–µ–Ω–æ \(documents.count) —Ñ–∏–ª—å–º–æ–≤")
            
            for (index, doc) in documents.enumerated() {
                if index < 3 { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
                    print("  üìã –§–∏–ª—å–º #\(index + 1): ID = \(doc.documentID), title = \(doc.data()["title"] ?? "–Ω–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è")")
                }
            }
        }
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∞–Ω—Å–æ–≤
        dispatchGroup.enter()
        db.collection("showtimes").getDocuments { snapshot, error in
            defer { dispatchGroup.leave() }
            
            if let error = error {
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–µ–∞–Ω—Å–æ–≤: \(error.localizedDescription)")
                return
            }
            
            guard let documents = snapshot?.documents else {
                print("‚ùå –î–æ–∫—É–º–µ–Ω—Ç—ã —Å–µ–∞–Ω—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                return
            }
            
            print("‚úÖ –ù–∞–π–¥–µ–Ω–æ \(documents.count) —Å–µ–∞–Ω—Å–æ–≤")
            
            for (index, doc) in documents.enumerated() {
                if index < 3 { // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3 –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
                    print("  üìã –°–µ–∞–Ω—Å #\(index + 1): ID = \(doc.documentID), movieId = \(doc.data()["movieId"] ?? "–Ω–µ—Ç ID —Ñ–∏–ª—å–º–∞")")
                }
            }
        }
        
        dispatchGroup.notify(queue: .main) {
            print("üèÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        }
    }
}
